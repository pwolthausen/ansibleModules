## small playbook to configure an Arch workstation

---
- hosts: localhost
  vars_prompt:
    - name: "ansible_become_pass"
      prompt: "Enter sudo password"
      private: yes
    - name: "user"
      prompt: "Primary local user"
  tasks:
    - name: Install packages from package manager
      become: true
      block:
        - name: Update pacman
          pacman:
            update_cache: yes
            upgrade: yes

        - name: Install arch packages
          pacman:
            name:
              - terminator
              - vim
              - atom
              - remmina
              - freerdp
              - terraform
              - kubectl
              - git-crypt
              - pamac
              - docker
            state: present

        - name: install nvidia drivers
          command: 'mhwd -a pci nonfree 0300'

    - name: ensure pamac is installed and ready to use
      become: true
      block:
        - name: Ensure EnableAUR
          replace:
            path: /etc/pamac.conf
            regexp: "^#EnableAUR$"
            replace: "EnableAUR"

        - name: ensure CheckAURUpdates
          replace:
            path: /etc/pamac.conf
            regexp: "^#CheckAURUpdates$"
            replace: "CheckAURUpdates"

        - name: ensure CheckAURVCSUpdates
          replace:
            path: /etc/pamac.conf
            regexp: "^#CheckAURVCSUpdates$"
            replace: "CheckAURVCSUpdates"

    - name: Install packages from AURs w/ pamac
      block:
        - name: install pexpect for expect module
          pip:
            name: pexpect>=3.3
            state: present

        - name: install AURs
          expect:
            command: pamac install "{{ item }}"
            responses:
              (.*)from AUR ?(.*): y
              (.*)Edit build(.*): n
              (.*)Apply transaction(.*): y
              (.*)Password(.*): "{{ansible_become_pass }}"
            timeout: 120
          with_items:
            - google-cloud-sdk
            - slack-desktop
            - zoom
            - forticlientsslvpn
            - rke
            - kops
            - teams

    - name: copy over bash and ssh files
      block:
        - template:
            src: bashrc.j2
            dest: /home/{{ user }}/.bashrc
        - template:
            src: bashaliases.j2
            dest: /home/{{ user }}/.bash_aliases
        - template:
            src: sshconfig.j2
            dest: /home/{{ user }}/.ssh/config
